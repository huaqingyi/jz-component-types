{"version":3,"sources":["styles/index.ts"],"names":[],"mappings":";;;AAEA,mCAAkC;AAClC,qCAAoC;AACpC,mCAAkC;AAClC,2CAA0C;AAC1C,+BAA8B;AAC9B,yCAAwC;AACxC,yCAAwC;AAuC3B,QAAA,MAAM,GAAuC;IACtD,MAAM,iBAAA,EAAE,OAAO,mBAAA,EAAE,MAAM,iBAAA,EAAE,UAAU,yBAAA,EAAE,IAAI,aAAA,EAAE,SAAS,uBAAA,EAAE,SAAS,uBAAA;CAClE,CAAC","file":"../../styles/index.js","sourcesContent":["import { StyleInputType } from './enums';\nimport * as CSS from 'csstype';\nimport { border } from './border';\nimport { padding } from './padding';\nimport { margin } from './margin';\nimport { background } from './background';\nimport { font } from './font';\nimport { textAlign } from './textAlign';\nimport { boxShadow } from './boxShadow';\n\nexport interface CSSProperties extends CSS.Properties<string | number> {\n    /**\n     * The index signature was removed to enable closed typing for style\n     * using CSSType. You're able to use type assertion or module augmentation\n     * to add properties or an index signature of your own.\n     *\n     * For examples and more information, visit:\n     * https://github.com/frenic/csstype#what-should-i-do-when-i-get-type-errors\n     */\n}\n\nexport type StyleConfigurations<CSS> = {\n    [P in keyof CSS]: StyleConfig;\n}\n\nexport interface StyleConfig {\n    // 标题\n    title: string;\n    // 输入类型\n    type: StyleInputType;\n    // 按钮 icon\n    icon?: string;\n    // 输入类型为 BUTTONSWITCH value 为按钮值\n    value?: any;\n    // 子表单\n    config?: StyleConfigurations<CSSProperties>;\n    // 输入类型为 SELECT 时 该字段控制多选\n    multiple?: boolean;\n    // 当类型为 BUTTONSWITCH 同一个样式有多个值时\n    options?: Array<{ name?: string; data: any; map: any; }>;\n    attrs?: StyleConfig[];\n}\n\nexport interface StyleConfiguration extends StyleConfigurations<CSSProperties> {\n\n}\n\nexport const styles: StyleConfigurations<CSSProperties> = {\n    border, padding, margin, background, font, textAlign, boxShadow\n};\n"]}